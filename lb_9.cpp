#include "lb_9.h"
#include <math.h>
void lb_9::display_exercise(const int num)
{
	switch (num)
	{
	case 1:
		ex1();
		break;
	case 2:
		ex2();
		break;
	case 3:
		ex3();
		break;
	case 4:
		ex4();
		break;
	default:
		break;
	}
}

/*Вычислить 6 значений
 функции Y = 3000 / (x ^ 2 + 3, 6 * x – 7, 5),
 (x изменяется от 2 с шагом 2, 7).
 Результат разместить в памяти.*/
void lb_9::ex1()
{
	
	/*double func = 0;
	for (float x = 2; x < 6 * 2.7; x += 2.7)
	{
		func = (double)3000 / (x * x + 3.6 * x - 7.5);
		cout << "x = " << x << ": 3000 / (" << x << "^2 + 3.6*" << x << "- 7.5) = " << func << endl;
	}
	cout << endl << endl;*/


	double REZ[6];
	double X = 2;
	double A = 3.6;
	double B = 7.5;
	double C = 3000;
	double D = 2.7;

	_asm
	{
		lea	EBX, REZ			; загрузка адреса результатов в регистр EBX
		mov	ECX, 6				; счетчик количества повторений цикла
		m1 :
		finit					; очистка регистров FPU
			fld	X				; загрузка аргумента в стек FPU
			fmul X
			fld A
			fmul X
			fadd	ST, ST(1)
			fld	B
			fsub ST(1), ST
			fld C
			fdiv ST(0), ST(2)
			fstp qword ptr[EBX]
			fld X; загрузить в FPU X
			fadd D
			fstp X
			add	EBX, 8					; увеличение адреса результатов
		loop m1
	}
	cout << "\n----------------------------------------------------------------------------------------- Задание №1 " << endl;
	cout << "Вычислить 6 значений функции\
\nY = 3000 / (x ^ 2 + 3, 6 * x – 7, 5),\
\n(x изменяется от 2 с шагом 2, 7).\
\nРезультат разместить в памяти." << endl << endl;
	X = 2;
	for (auto element : REZ) {
		cout << "x = " << X << "   \t Y = " << C << "/(" << X << "^2 + " << A << "*" << X << "-" << B << ") = " << element << endl;
		X += 2.7;
	}
}

/*Задан массив с элементами b(i) = sin(2 * i ^ 2).
 Определить номер элемента, при котором сумма элементов превысит 3.
 Аргумент синуса задан в градусах.*/
void lb_9::ex2()
{
	double REZ[100];
	double X = 1;
	double A = 2;
	double B = 3;
	double N = 1;
	int D = 180;
	
	double sum = 0;

	_asm
	{
		lea	EBX, REZ					; загрузка адреса результатов в регистр EBX
		mov	ECX, 6						; счетчик количества повторений цикла

		m1 :
			finit							; очистка регистров FPU

				fldpi; загрузка константы «пи» в стек FPU
				fmul	X; умножение числа «пи» на аргумент
				fidiv	D; деление аргумента на 180
		
			fmul X
			fmul A

			fsin

			fst qword ptr[EBX]

			fld sum
			fadd					; накопление суммы последовательности
			fst sum


			fld X					; загрузить в FPU X
			fadd N
			fstp X
			add	EBX, 8				; увеличение адреса результатов


			fcom	B				; сравнение суммы с 3
			fstsw	AX				; сохранение копии регистра состояния SW в регистре AX(CPU)

			sahf					; сохранение старшего байта АХ в EFLAGS
			jb	m1					; переход, если сумма меньше 3

	}


	cout << "\n----------------------------------------------------------------------------------------- Задание №2 " << endl;
	cout << "Задан массив с элементами b(i) = sin(2 * i ^ 2).\
\nОпределить номер элемента, при котором сумма элементов превысит 3.\
\nАргумент синуса задан в градусах." << endl << endl;
	cout << "i = " << X - 1 << "   \t SUM(" << X-1 <<") = " << sum << endl;


	/*
	double summ = 0;
	double bi;
	for (float x = 0; ; x++)
	{

		bi = sin(2 * x * x * 3.14159536 / 180) ;
		summ += bi;
		cout << "x = " << x << ": sin(2*" << x << "^2) = " << bi << "\t\tsum = " << summ << endl;

		if (summ > 3) {
			//cout << "x = " << x << ": sin(2*" << x << "^2) = " << bi << "\t\tsum = " << summ << endl;
			break;
		}

	}*/
}

/*Вычислить одно значение функции Y.
  Параметры аргументов выбирать с учетом области определения.
  Результат перевести в градусы.
  Y = 2 * arcSin((A ^ 2 + B ^ 2) / 3).*/
void lb_9::ex3()
{
	double A = 0.5;
	double B = 0.5;
	double C = 3;
	int E = 2;
	long D = 180;
	double res;
	_asm
	{
		finit				; очистка регистров FPU
		fld A
		fmul A
		fld B
		fmul B
		fadd
		fdiv C
		fld	ST				; копирование вершины стека
		fmul	ST, ST		; возведение в квадрат
		fld1				; загрузка 1 в стек FPU
		fsubr				; вычитание с реверсом : 1 – z ^ 2
		fsqrt				; корень квадратный
		fpatan				; вычисление арктангенса
		fldpi				; загрузка в стек пи
		fdiv				; перевод в градусы - деление на пи
		fimul	D			; перевод в градусы - умножение на 180
		fimul E
		fstp	res			; сохранение результата в ячейке памяти
	}

	cout << "\n----------------------------------------------------------------------------------------- Задание №3 " << endl;
	cout << "Вычислить одно значение функции Y.\
\nПараметры аргументов выбирать с учетом области определения.\
\nРезультат перевести в градусы.\
\nY = 2 * arcSin((A ^ 2 + B ^ 2) / 3)." << endl << endl;
	cout << "A = "<< A <<", B = " << B <<"\tY = " << E << "*arcSin(" << A << "^2 + " << B << "^2)/" << C <<") = " << res << "\xB0" << endl;
}

/*Вычислить 7 значений
 функции Y = 6 * lg(cos x),
 x изменяется в градусах от 8 с шагом 12.*/
void lb_9::ex4()
{
	double REZ[7];
	int A = 6;
	double X = 8;
	long D = 180;
	double C = 12;
	


	_asm
	{
		lea	EBX, REZ						; загрузка адреса результатов в регистр EBX
		mov	ECX, 7							; счетчик количества повторений цикла
		m1 :
			finit							; очистка регистров FPU
			FLD1							; загрузка константы "1" в стек

			fldpi; загрузка константы «пи» в стек FPU
			fmul	X; умножение числа «пи» на аргумент
			fidiv	D; деление аргумента на 180

		
			fcos							; вычисление cos(x)
			FYL2X							; st = log2(X)
			FLDL2T							; st = log2(10)
			FDIVP st(1), st(0)				; st = log10(X)
			fimul A							; умножение на 6
			fstp qword ptr[EBX]				; сохранение значения в массив
			fld X							; загрузить в FPU X
			fadd C							; инкриментирование
			fstp X							; инкриментирование
			add	EBX, 8						; увеличение адреса результатов
		loop m1
	}

	cout << "\n----------------------------------------------------------------------------------------- Задание №4 " << endl;;
	cout << "Вычислить 7 значений функции\
\nY = 6 * lg(cos x),\
\nx изменяется в градусах от 8 с шагом 12." << endl << endl;
	X = 8;
	for (auto element : REZ) {
		cout << "x = " << X << "\xB0   \tY = 6*lg(cos " << X << "\xB0) = " << element << endl;
		X += 12;
	}

}